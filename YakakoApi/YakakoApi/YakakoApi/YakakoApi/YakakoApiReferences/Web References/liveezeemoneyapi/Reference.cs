//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace YakakoApiReferences.liveezeemoneyapi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService", Namespace="http://tempuri.org/")]
    public partial class API : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PayBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateBillAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBillStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDSTVProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback TopUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDueAmountAndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsuranceSearchCustomerInfoByCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTelcoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirTimeTopUpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public API() {
            this.Url = global::YakakoApiReferences.Properties.Settings.Default.YakakoApiReferences_liveezeemoneyapi_API;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PayBillCompletedEventHandler PayBillCompleted;
        
        /// <remarks/>
        public event ValidateBillAccountCompletedEventHandler ValidateBillAccountCompleted;
        
        /// <remarks/>
        public event CheckBillStatusCompletedEventHandler CheckBillStatusCompleted;
        
        /// <remarks/>
        public event GetDSTVProductCompletedEventHandler GetDSTVProductCompleted;
        
        /// <remarks/>
        public event CheckBalanceCompletedEventHandler CheckBalanceCompleted;
        
        /// <remarks/>
        public event TopUpCompletedEventHandler TopUpCompleted;
        
        /// <remarks/>
        public event GetDueAmountAndDateCompletedEventHandler GetDueAmountAndDateCompleted;
        
        /// <remarks/>
        public event InsuranceSearchCustomerInfoByCardCompletedEventHandler InsuranceSearchCustomerInfoByCardCompleted;
        
        /// <remarks/>
        public event GetTelcoListCompletedEventHandler GetTelcoListCompleted;
        
        /// <remarks/>
        public event AirTimeTopUpCompletedEventHandler AirTimeTopUpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/PayBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sctrxnid", IsNullable=true)]
        public string PayBill(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sccode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sctxnid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string txntype, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string payeecode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountno, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phoneno, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string amount, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string remark1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string remark2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respcode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string emtxid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string txnfee, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string receiptno, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info3, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info4, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info5) {
            object[] results = this.Invoke("PayBill", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid,
                        txntype,
                        payeecode,
                        accountno,
                        phoneno,
                        amount,
                        remark1,
                        remark2});
            respcode = ((string)(results[1]));
            respmsg = ((string)(results[2]));
            emtxid = ((string)(results[3]));
            txnfee = ((string)(results[4]));
            receiptno = ((string)(results[5]));
            info1 = ((string)(results[6]));
            info2 = ((string)(results[7]));
            info3 = ((string)(results[8]));
            info4 = ((string)(results[9]));
            info5 = ((string)(results[10]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PayBillAsync(string sccode, string userid, string password, string sctxnid, string txntype, string payeecode, string accountno, string phoneno, string amount, string remark1, string remark2) {
            this.PayBillAsync(sccode, userid, password, sctxnid, txntype, payeecode, accountno, phoneno, amount, remark1, remark2, null);
        }
        
        /// <remarks/>
        public void PayBillAsync(string sccode, string userid, string password, string sctxnid, string txntype, string payeecode, string accountno, string phoneno, string amount, string remark1, string remark2, object userState) {
            if ((this.PayBillOperationCompleted == null)) {
                this.PayBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayBillOperationCompleted);
            }
            this.InvokeAsync("PayBill", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid,
                        txntype,
                        payeecode,
                        accountno,
                        phoneno,
                        amount,
                        remark1,
                        remark2}, this.PayBillOperationCompleted, userState);
        }
        
        private void OnPayBillOperationCompleted(object arg) {
            if ((this.PayBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayBillCompleted(this, new PayBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/ValidateBillAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sctrxnid", IsNullable=true)]
        public string ValidateBillAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sccode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sctxnid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string payeecode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string remark1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string remark2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info4, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info5) {
            object[] results = this.Invoke("ValidateBillAccount", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid,
                        payeecode,
                        accountno,
                        remark1,
                        remark2});
            respcode = ((string)(results[1]));
            respmsg = ((string)(results[2]));
            info1 = ((string)(results[3]));
            info2 = ((string)(results[4]));
            info3 = ((string)(results[5]));
            info4 = ((string)(results[6]));
            info5 = ((string)(results[7]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateBillAccountAsync(string sccode, string userid, string password, string sctxnid, string payeecode, string accountno, string remark1, string remark2) {
            this.ValidateBillAccountAsync(sccode, userid, password, sctxnid, payeecode, accountno, remark1, remark2, null);
        }
        
        /// <remarks/>
        public void ValidateBillAccountAsync(string sccode, string userid, string password, string sctxnid, string payeecode, string accountno, string remark1, string remark2, object userState) {
            if ((this.ValidateBillAccountOperationCompleted == null)) {
                this.ValidateBillAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateBillAccountOperationCompleted);
            }
            this.InvokeAsync("ValidateBillAccount", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid,
                        payeecode,
                        accountno,
                        remark1,
                        remark2}, this.ValidateBillAccountOperationCompleted, userState);
        }
        
        private void OnValidateBillAccountOperationCompleted(object arg) {
            if ((this.ValidateBillAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateBillAccountCompleted(this, new ValidateBillAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/CheckBillStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sctrxnid", IsNullable=true)]
        public string CheckBillStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sccode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sctxnid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string emtxid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string txnfee, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string receiptno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info4, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info5) {
            object[] results = this.Invoke("CheckBillStatus", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid});
            respcode = ((string)(results[1]));
            respmsg = ((string)(results[2]));
            emtxid = ((string)(results[3]));
            txnfee = ((string)(results[4]));
            receiptno = ((string)(results[5]));
            info1 = ((string)(results[6]));
            info2 = ((string)(results[7]));
            info3 = ((string)(results[8]));
            info4 = ((string)(results[9]));
            info5 = ((string)(results[10]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBillStatusAsync(string sccode, string userid, string password, string sctxnid) {
            this.CheckBillStatusAsync(sccode, userid, password, sctxnid, null);
        }
        
        /// <remarks/>
        public void CheckBillStatusAsync(string sccode, string userid, string password, string sctxnid, object userState) {
            if ((this.CheckBillStatusOperationCompleted == null)) {
                this.CheckBillStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBillStatusOperationCompleted);
            }
            this.InvokeAsync("CheckBillStatus", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid}, this.CheckBillStatusOperationCompleted, userState);
        }
        
        private void OnCheckBillStatusOperationCompleted(object arg) {
            if ((this.CheckBillStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBillStatusCompleted(this, new CheckBillStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/GetDSTVProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("product", IsNullable=true)]
        public System.Data.DataTable GetDSTVProduct([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sccode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg) {
            object[] results = this.Invoke("GetDSTVProduct", new object[] {
                        sccode,
                        userid,
                        password});
            respcode = ((string)(results[1]));
            respmsg = ((string)(results[2]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDSTVProductAsync(string sccode, string userid, string password) {
            this.GetDSTVProductAsync(sccode, userid, password, null);
        }
        
        /// <remarks/>
        public void GetDSTVProductAsync(string sccode, string userid, string password, object userState) {
            if ((this.GetDSTVProductOperationCompleted == null)) {
                this.GetDSTVProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDSTVProductOperationCompleted);
            }
            this.InvokeAsync("GetDSTVProduct", new object[] {
                        sccode,
                        userid,
                        password}, this.GetDSTVProductOperationCompleted, userState);
        }
        
        private void OnGetDSTVProductOperationCompleted(object arg) {
            if ((this.GetDSTVProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDSTVProductCompleted(this, new GetDSTVProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/CheckBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("respcode", IsNullable=true)]
        public string CheckBalance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sccode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string scbalance, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string sccommbalance) {
            object[] results = this.Invoke("CheckBalance", new object[] {
                        sccode,
                        userid,
                        password});
            respmsg = ((string)(results[1]));
            scbalance = ((string)(results[2]));
            sccommbalance = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBalanceAsync(string sccode, string userid, string password) {
            this.CheckBalanceAsync(sccode, userid, password, null);
        }
        
        /// <remarks/>
        public void CheckBalanceAsync(string sccode, string userid, string password, object userState) {
            if ((this.CheckBalanceOperationCompleted == null)) {
                this.CheckBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBalanceOperationCompleted);
            }
            this.InvokeAsync("CheckBalance", new object[] {
                        sccode,
                        userid,
                        password}, this.CheckBalanceOperationCompleted, userState);
        }
        
        private void OnCheckBalanceOperationCompleted(object arg) {
            if ((this.CheckBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBalanceCompleted(this, new CheckBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/TopUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("respcode", IsNullable=true)]
        public string TopUp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sccode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string refno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string amount, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg) {
            object[] results = this.Invoke("TopUp", new object[] {
                        sccode,
                        userid,
                        bankcode,
                        refno,
                        date,
                        amount,
                        password});
            respmsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TopUpAsync(string sccode, string userid, string bankcode, string refno, string date, string amount, string password) {
            this.TopUpAsync(sccode, userid, bankcode, refno, date, amount, password, null);
        }
        
        /// <remarks/>
        public void TopUpAsync(string sccode, string userid, string bankcode, string refno, string date, string amount, string password, object userState) {
            if ((this.TopUpOperationCompleted == null)) {
                this.TopUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTopUpOperationCompleted);
            }
            this.InvokeAsync("TopUp", new object[] {
                        sccode,
                        userid,
                        bankcode,
                        refno,
                        date,
                        amount,
                        password}, this.TopUpOperationCompleted, userState);
        }
        
        private void OnTopUpOperationCompleted(object arg) {
            if ((this.TopUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TopUpCompleted(this, new TopUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/GetDueAmountAndDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sctrxnid", IsNullable=true)]
        public string GetDueAmountAndDate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sccode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sctxnid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string payeecode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string remark1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string remark2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info4, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info5) {
            object[] results = this.Invoke("GetDueAmountAndDate", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid,
                        payeecode,
                        accountno,
                        remark1,
                        remark2});
            respcode = ((string)(results[1]));
            respmsg = ((string)(results[2]));
            info1 = ((string)(results[3]));
            info2 = ((string)(results[4]));
            info3 = ((string)(results[5]));
            info4 = ((string)(results[6]));
            info5 = ((string)(results[7]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDueAmountAndDateAsync(string sccode, string userid, string password, string sctxnid, string payeecode, string accountno, string remark1, string remark2) {
            this.GetDueAmountAndDateAsync(sccode, userid, password, sctxnid, payeecode, accountno, remark1, remark2, null);
        }
        
        /// <remarks/>
        public void GetDueAmountAndDateAsync(string sccode, string userid, string password, string sctxnid, string payeecode, string accountno, string remark1, string remark2, object userState) {
            if ((this.GetDueAmountAndDateOperationCompleted == null)) {
                this.GetDueAmountAndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDueAmountAndDateOperationCompleted);
            }
            this.InvokeAsync("GetDueAmountAndDate", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid,
                        payeecode,
                        accountno,
                        remark1,
                        remark2}, this.GetDueAmountAndDateOperationCompleted, userState);
        }
        
        private void OnGetDueAmountAndDateOperationCompleted(object arg) {
            if ((this.GetDueAmountAndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDueAmountAndDateCompleted(this, new GetDueAmountAndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/InsuranceSearchCustomerInfoByCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsuranceSearchCustomerInfoByCard([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sccode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardno, out bool res, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool resSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string response) {
            object[] results = this.Invoke("InsuranceSearchCustomerInfoByCard", new object[] {
                        sccode,
                        userid,
                        password,
                        cardno});
            res = ((bool)(results[0]));
            resSpecified = ((bool)(results[1]));
            respcode = ((string)(results[2]));
            respmsg = ((string)(results[3]));
            response = ((string)(results[4]));
        }
        
        /// <remarks/>
        public void InsuranceSearchCustomerInfoByCardAsync(string sccode, string userid, string password, string cardno) {
            this.InsuranceSearchCustomerInfoByCardAsync(sccode, userid, password, cardno, null);
        }
        
        /// <remarks/>
        public void InsuranceSearchCustomerInfoByCardAsync(string sccode, string userid, string password, string cardno, object userState) {
            if ((this.InsuranceSearchCustomerInfoByCardOperationCompleted == null)) {
                this.InsuranceSearchCustomerInfoByCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsuranceSearchCustomerInfoByCardOperationCompleted);
            }
            this.InvokeAsync("InsuranceSearchCustomerInfoByCard", new object[] {
                        sccode,
                        userid,
                        password,
                        cardno}, this.InsuranceSearchCustomerInfoByCardOperationCompleted, userState);
        }
        
        private void OnInsuranceSearchCustomerInfoByCardOperationCompleted(object arg) {
            if ((this.InsuranceSearchCustomerInfoByCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsuranceSearchCustomerInfoByCardCompleted(this, new InsuranceSearchCustomerInfoByCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/GetTelcoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PinProdList GetTelcoList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg) {
            object[] results = this.Invoke("GetTelcoList", new object[0]);
            respcode = ((string)(results[1]));
            respmsg = ((string)(results[2]));
            return ((PinProdList)(results[0]));
        }
        
        /// <remarks/>
        public void GetTelcoListAsync() {
            this.GetTelcoListAsync(null);
        }
        
        /// <remarks/>
        public void GetTelcoListAsync(object userState) {
            if ((this.GetTelcoListOperationCompleted == null)) {
                this.GetTelcoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTelcoListOperationCompleted);
            }
            this.InvokeAsync("GetTelcoList", new object[0], this.GetTelcoListOperationCompleted, userState);
        }
        
        private void OnGetTelcoListOperationCompleted(object arg) {
            if ((this.GetTelcoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTelcoListCompleted(this, new GetTelcoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/AirTimeTopUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sctrxnid", IsNullable=true)]
        public string AirTimeTopUp(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sccode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sctxnid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string trxtype, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phoneno, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string amount, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pinKeyword, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respcode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string respmsg, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string emtrxid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info3, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info4, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string info5) {
            object[] results = this.Invoke("AirTimeTopUp", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid,
                        trxtype,
                        cardid,
                        phoneno,
                        amount,
                        pinKeyword});
            respcode = ((string)(results[1]));
            respmsg = ((string)(results[2]));
            emtrxid = ((string)(results[3]));
            info1 = ((string)(results[4]));
            info2 = ((string)(results[5]));
            info3 = ((string)(results[6]));
            info4 = ((string)(results[7]));
            info5 = ((string)(results[8]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AirTimeTopUpAsync(string sccode, string userid, string password, string sctxnid, string trxtype, string cardid, string phoneno, string amount, string pinKeyword) {
            this.AirTimeTopUpAsync(sccode, userid, password, sctxnid, trxtype, cardid, phoneno, amount, pinKeyword, null);
        }
        
        /// <remarks/>
        public void AirTimeTopUpAsync(string sccode, string userid, string password, string sctxnid, string trxtype, string cardid, string phoneno, string amount, string pinKeyword, object userState) {
            if ((this.AirTimeTopUpOperationCompleted == null)) {
                this.AirTimeTopUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirTimeTopUpOperationCompleted);
            }
            this.InvokeAsync("AirTimeTopUp", new object[] {
                        sccode,
                        userid,
                        password,
                        sctxnid,
                        trxtype,
                        cardid,
                        phoneno,
                        amount,
                        pinKeyword}, this.AirTimeTopUpOperationCompleted, userState);
        }
        
        private void OnAirTimeTopUpOperationCompleted(object arg) {
            if ((this.AirTimeTopUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirTimeTopUpCompleted(this, new AirTimeTopUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/UGD_EMTerminalAPI.Model")]
    public partial class PinProdList {
        
        private PinProdClass[] prodField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public PinProdClass[] prod {
            get {
                return this.prodField;
            }
            set {
                this.prodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/UGD_EMTerminalAPI.Model")]
    public partial class PinProdClass {
        
        private string pin_DescField;
        
        private string pin_KeywordField;
        
        private long pin_ProdIDField;
        
        private bool pin_ProdIDFieldSpecified;
        
        private int pin_StatusField;
        
        private bool pin_StatusFieldSpecified;
        
        private string pin_Status_descField;
        
        private int pin_typeField;
        
        private bool pin_typeFieldSpecified;
        
        private string pin_type_descField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Pin_Desc {
            get {
                return this.pin_DescField;
            }
            set {
                this.pin_DescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Pin_Keyword {
            get {
                return this.pin_KeywordField;
            }
            set {
                this.pin_KeywordField = value;
            }
        }
        
        /// <remarks/>
        public long Pin_ProdID {
            get {
                return this.pin_ProdIDField;
            }
            set {
                this.pin_ProdIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Pin_ProdIDSpecified {
            get {
                return this.pin_ProdIDFieldSpecified;
            }
            set {
                this.pin_ProdIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Pin_Status {
            get {
                return this.pin_StatusField;
            }
            set {
                this.pin_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Pin_StatusSpecified {
            get {
                return this.pin_StatusFieldSpecified;
            }
            set {
                this.pin_StatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Pin_Status_desc {
            get {
                return this.pin_Status_descField;
            }
            set {
                this.pin_Status_descField = value;
            }
        }
        
        /// <remarks/>
        public int Pin_type {
            get {
                return this.pin_typeField;
            }
            set {
                this.pin_typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Pin_typeSpecified {
            get {
                return this.pin_typeFieldSpecified;
            }
            set {
                this.pin_typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Pin_type_desc {
            get {
                return this.pin_type_descField;
            }
            set {
                this.pin_type_descField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void PayBillCompletedEventHandler(object sender, PayBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string respcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string emtxid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string txnfee {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string receiptno {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string info1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string info2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string info3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string info4 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string info5 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ValidateBillAccountCompletedEventHandler(object sender, ValidateBillAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateBillAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateBillAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string respcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string info1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string info2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string info3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string info4 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string info5 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CheckBillStatusCompletedEventHandler(object sender, CheckBillStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBillStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBillStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string respcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string emtxid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string txnfee {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string receiptno {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string info1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string info2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string info3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string info4 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string info5 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetDSTVProductCompletedEventHandler(object sender, GetDSTVProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDSTVProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDSTVProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string respcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CheckBalanceCompletedEventHandler(object sender, CheckBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string scbalance {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string sccommbalance {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void TopUpCompletedEventHandler(object sender, TopUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TopUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TopUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetDueAmountAndDateCompletedEventHandler(object sender, GetDueAmountAndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDueAmountAndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDueAmountAndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string respcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string info1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string info2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string info3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string info4 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string info5 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void InsuranceSearchCustomerInfoByCardCompletedEventHandler(object sender, InsuranceSearchCustomerInfoByCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsuranceSearchCustomerInfoByCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsuranceSearchCustomerInfoByCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool resSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string respcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string response {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetTelcoListCompletedEventHandler(object sender, GetTelcoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTelcoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTelcoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PinProdList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PinProdList)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string respcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AirTimeTopUpCompletedEventHandler(object sender, AirTimeTopUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirTimeTopUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirTimeTopUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string respcode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string emtrxid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string info1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string info2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string info3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string info4 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string info5 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
    }
}

#pragma warning restore 1591